{"version":3,"sources":["Assets/avatar.jpg","Components/Navigation.tsx","Components/Biography.tsx","Components/CompanyItem.tsx","Components/DateRange.tsx","Components/Experience.tsx","Components/Education.tsx","Components/SectionTitle.tsx","Components/Skill.tsx","Components/Contact.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Navigation","state","isOpen","show","width","_this","toggleNav","setState","prevState","Object","objectSpread","render","react_default","a","createElement","className","props","subtitle","Button","color","onClick","esm","handleWidth","resizableElementId","_ref","height","Collapse","Nav","vertical","NavLink","href","React","Component","Biography","Col","xs","src","Avatar","name","headline","summary","CompanyItem","getLogo","logo","concat","process","Media","left","url","alt","body","DateRange","getEnd","end","start","Experience","renderBody","DateRange_DateRange","description","CompanyItem_CompanyItem","assign","company","Education","degree","field","school","SectionTitle","id","title","Col_default","xl","md","Contact","hasLinks","links","length","renderLinks","lg","map","link","renderSocial","text","icon","index_es","size","Row","email","linkedin","faAt","faLinkedin","twitter","faTwitter","stackoverflow","faStackOverflow","github","faGithub","pinterest","faPinterest","App","portfolio","PortfolioJSON","navOpen","showNav","noGutters","Navigation_Navigation","biography","SectionTitle_SectionTitle","Biography_Biography","experience","ex","Experience_Experience","education","ed","Education_Education","skills","skill","Skill_Experience","Contact_Contact","contacts","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5d487a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.fe5d8070.jpg\";","import React from 'react';\r\nimport { Nav, NavLink, Collapse, Button, } from 'reactstrap';\r\nimport ResizeDetector from 'react-resize-detector';\r\n\r\n\r\nexport default class Navigation extends React.Component<{ subtitle: string }, { isOpen: boolean }> {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    private show = (width: number): boolean => {\r\n        return width > 768 || this.state.isOpen;\r\n    }\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            isOpen: !prevState.isOpen,\r\n        }));\r\n    }\r\n\r\n    render = (): JSX.Element => (\r\n        <header>\r\n            <div className=\"sticky-top\">\r\n                <div className=\"header-brand\">\r\n                    <div className=\"header-title\">Portfolio</div>\r\n                    <div className=\"header-subtitle\">{this.props.subtitle}</div>\r\n                </div>\r\n                <Button color=\"primary\" className=\"nav-button\" onClick={this.toggleNav}>Menu</Button>\r\n                <ResizeDetector handleWidth resizableElementId=\"root\" render={({width, height}) => (\r\n                    <Collapse isOpen={this.show(width)} className=\"header-nav\">\r\n                        <Nav vertical>\r\n                            <NavLink href=\"#root\">Home</NavLink>\r\n                            <NavLink href=\"#biography\">Biography</NavLink>\r\n                            <NavLink href=\"#contact\">Contact</NavLink>\r\n                        </Nav>\r\n                    </Collapse>\r\n                )}>\r\n                </ResizeDetector>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport { Col, } from 'reactstrap';\r\n\r\nimport Avatar from \"./../Assets/avatar.jpg\"\r\n\r\nimport { IBiography } from \"./../Model/IPortfolio\"\r\n\r\nexport default class Biography extends React.Component<IBiography> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"biography\">\r\n                <img src={Avatar} className=\"biography-avatar\" />\r\n                <div className=\"biography-title\">{this.props.name}</div>\r\n                <div className=\"biography-headline\">{this.props.headline}</div>\r\n            </div>\r\n            <div className=\"biography-summary\">{this.props.summary}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport { ICompany } from '../Model/IPortfolio'\r\n\r\ninterface ICompanyItemProps extends ICompany {\r\n    body: JSX.Element;\r\n}\r\n\r\nexport default class CompanyItem extends React.Component<ICompanyItemProps> {\r\n    private getLogo = (): string =>  this.props.logo ? `${process.env.PUBLIC_URL}/Assets/Logos/${this.props.logo}.png` : \"http://via.placeholder.com/60x60\";\r\n\r\n    render = (): JSX.Element => (\r\n        <Media className=\"company\">\r\n            <Media left href={this.props.url}>\r\n                <div className=\"company-logo-wrapper\">\r\n                    <img className=\"company-logo\" src={this.getLogo()} alt=\"Company logo\" />\r\n                </div>\r\n            </Media>\r\n            <Media body>\r\n                <div className=\"company-heading\">{this.props.name}</div>\r\n                {this.props.body}\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default class DateRange extends React.Component<{ start: string, end?: string}> {\r\n    private getEnd = (): string => this.props.end || \"Present\";\r\n    render = (): JSX.Element => (\r\n        <span className=\"date-range\">\r\n            {this.props.start} - {this.getEnd()}\r\n        </span>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IExperience } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<IExperience> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            { this.props.description && <div className=\"description\">{this.props.description}</div> }\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.company } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IEducation } from './../Model/IPortfolio'\r\n\r\nexport default class Education extends React.Component<IEducation> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            <div>\r\n                { this.props.degree && <span className=\"education-degree\">{this.props.degree} </span> }\r\n                { this.props.field }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.school } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport default class SectionTitle extends React.Component<{ title: string, id?: string }> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"section-title\" id={this.props.id}>\r\n                <span>{this.props.title}</span>\r\n                <hr />\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nimport { ISkill } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<ISkill> {\r\n    render = (): JSX.Element => (\r\n        <Col xl md=\"6\">\r\n            <div className=\"skill-description\"><span className=\"skill-title\">{this.props.field}</span>{this.props.description}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAt, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faTwitter, faStackOverflow, faGithub, faPinterest } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { IContacts } from './../Model/IPortfolio'\r\n\r\nexport default class Contact extends React.Component<IContacts> {\r\n    private hasLinks = (): boolean => this.props.links.length > 0;\r\n\r\n    private renderLinks = (): JSX.Element => (\r\n        <Col lg=\"2\">\r\n            <div>Other links:</div>\r\n            <ul>\r\n                { this.props.links.map((link) => <li><a href={link.url}>{link.title}</a></li>)} \r\n            </ul>\r\n        </Col>\r\n    )\r\n\r\n    private renderSocial = (text: string, url: string, icon: IconDefinition): JSX.Element => (\r\n        <Col xs=\"4\" className=\"social\">\r\n            <a href={url} className=\"social-link\">\r\n                <FontAwesomeIcon icon={icon} size=\"4x\" />\r\n                <div>{text}</div>\r\n            </a>\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        { this.props.email && this.renderSocial(this.props.email, `email://${this.props.linkedin}/`, faAt)}\r\n                        { this.props.linkedin && this.renderSocial(`in\\\\${this.props.linkedin}`, `https://www.linkedin.com/in/${this.props.linkedin}/`, faLinkedin)}\r\n                        { this.props.twitter && this.renderSocial(`@${this.props.twitter}`, `https://twitter.com/${this.props.twitter}`, faTwitter)}\r\n                        { this.props.stackoverflow && this.renderSocial('StackOverflow', `https://stackoverflow.com/users/${this.props.stackoverflow}`, faStackOverflow)}\r\n                        { this.props.github && this.renderSocial('Github', `https://github.com/${this.props.github}`, faGithub)}\r\n                        { this.props.pinterest && this.renderSocial('Pinterest', `https://cz.pinterest.com/${this.props.pinterest}/`, faPinterest)}\r\n                    </Row>\r\n                </Col>\r\n                { this.hasLinks() && this.renderLinks() }\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, } from 'reactstrap';\r\n\r\nimport Navigation from './Navigation';\r\nimport Biography from './Biography';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport SectionTitle from './SectionTitle';\r\nimport Skill from './Skill';\r\nimport Contact from './Contact';\r\n\r\nimport { IPortfolio } from \"./../Model/IPortfolio\"\r\nimport PortfolioJSON from \"./../Data/portfolio.json\"\r\n\r\ninterface IAppState {\r\n    portfolio: IPortfolio;\r\n    navOpen: boolean;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n    public state: IAppState = {\r\n        portfolio: PortfolioJSON,\r\n        navOpen: true,\r\n    };\r\n\r\n    private showNav = (): boolean => {\r\n        return this.state.navOpen;\r\n    }\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            navOpen: !prevState.navOpen,\r\n        }));\r\n    }\r\n\r\n    render = (): JSX.Element => (\r\n        <Row noGutters>\r\n            <Col md=\"auto\" className=\"sticky-top\">\r\n                <Navigation subtitle={this.state.portfolio.biography.name} />\r\n            </Col>\r\n            <Col md>\r\n                <main>\r\n                    <Row className=\"section\">\r\n                        <SectionTitle title=\"Biography\" id=\"biography\" />\r\n                        <Biography {...this.state.portfolio.biography} />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Experience\"/>\r\n                            {this.state.portfolio.experience.map((ex) => <Experience {...ex} />)}\r\n                        </Col>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Education\"/>\r\n                            {this.state.portfolio.education.map((ed) => <Education {...ed} />)}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Skills\"/>\r\n                        {this.state.portfolio.skills.map((skill) => <Skill {...skill} />)}\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Contact\" id=\"contact\" />\r\n                        <Contact { ...this.state.portfolio.contacts } />\r\n                    </Row>\r\n                </main>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.scss';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}