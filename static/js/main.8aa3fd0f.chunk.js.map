{"version":3,"sources":["Assets/avatar.jpg","Components/Navigation.tsx","Components/DateRange.tsx","Components/ProjectCard.tsx","Components/Biography.tsx","Components/CompanyItem.tsx","Components/Experience.tsx","Components/Education.tsx","Components/SectionTitle.tsx","Components/Skill.tsx","Components/Contact.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Navigation","state","isOpen","show","width","_this","toggleNav","setState","prevState","Object","objectSpread","render","react_default","a","createElement","className","href","props","subtitle","Button","color","onClick","esm","handleWidth","resizableElementId","_ref","height","Collapse","Nav","vertical","sections","map","section","NavLink","concat","anchor","name","React","Component","DateRange","getEnd","end","start","ProjectCard","size","getPreview","preview","process","renderLink","link","url","title","renderLinks","Col","lg","links","xs","Card","CardImg","top","src","alt","Row","noGutters","DateRange_DateRange","role","description","Biography","Avatar","headline","summary","CompanyItem","getLogo","logo","Media","left","body","Experience","renderBody","CompanyItem_CompanyItem","assign","company","Education","degree","field","school","SectionTitle","id","Col_default","xl","md","Contact","renderSocial","text","icon","index_es","email","linkedin","faAt","faLinkedin","twitter","faTwitter","stackoverflow","faStackOverflow","github","faGithub","pinterest","faPinterest","App","portfolio","PortfolioJSON","filteredProjects","groupBy","sortBy","projects","toAnchor","replace","toLowerCase","getSections","keys","type","renderSection","SectionTitle_SectionTitle","project","ProjectCard_ProjectCard","Navigation_Navigation","biography","entries","entry","Biography_Biography","experience","ex","Experience_Experience","education","ed","Education_Education","skills","skill","Skill_Experience","Contact_Contact","contacts","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8aa3fd0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.fe5d8070.jpg\";","import React from 'react';\r\nimport { Nav, NavLink, Collapse, Button, } from 'reactstrap';\r\nimport ResizeDetector from 'react-resize-detector';\r\n\r\ninterface INavigationProps {\r\n    subtitle: string;\r\n    sections: { name: string, anchor: string }[];\r\n}\r\n\r\nexport default class Navigation extends React.Component<INavigationProps, { isOpen: boolean }> {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    private show = (width: number): boolean => {\r\n        return width > 768 || this.state.isOpen;\r\n    }\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            isOpen: !prevState.isOpen,\r\n        }));\r\n    }\r\n\r\n    render = (): JSX.Element => (\r\n        <header>\r\n            <div className=\"sticky-top\">\r\n                <a href=\"#root\" className=\"nav-brand\">\r\n                    <div className=\"nav-title\">Portfolio</div>\r\n                    <div className=\"nav-subtitle\">{this.props.subtitle}</div>\r\n                </a>\r\n                <Button color=\"primary\" className=\"nav-button\" onClick={this.toggleNav}>Menu</Button>\r\n                <ResizeDetector handleWidth resizableElementId=\"root\" render={({width, height}) => (\r\n                    <Collapse isOpen={this.show(width)} className=\"nav-list\">\r\n                        <Nav vertical>\r\n                            <div className=\"nav-sections\">\r\n                            { this.props.sections.map((section) => <NavLink href={`#${section.anchor}`}>{section.name}</NavLink>)}\r\n                            </div>\r\n                            <NavLink href=\"#biography\">Biography</NavLink>\r\n                            <NavLink href=\"#contact\">Contact</NavLink>\r\n                        </Nav>\r\n                    </Collapse>\r\n                )}>\r\n                </ResizeDetector>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class DateRange extends React.Component<{ start: string, end?: string}> {\r\n    private getEnd = (): string => this.props.end || \"Present\";\r\n    render = (): JSX.Element => (\r\n        <span className=\"date-range\">\r\n            {this.props.start} - {this.getEnd()}\r\n        </span>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, Card, CardImg, Row, Collapse } from 'reactstrap';\r\n\r\nimport { IProject, ILink } from './../Model/IPortfolio'\r\nimport DateRange from './DateRange';\r\n\r\nexport default class ProjectCard extends React.Component<IProject, { isOpen: boolean, size: \"auto\" | \"12\" }> {\r\n    state = {\r\n        isOpen: false,\r\n        size: \"auto\" as \"auto\",\r\n    }\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            isOpen: !prevState.isOpen,\r\n            size: prevState.size === \"auto\" ? \"12\" : \"auto\",\r\n        }));\r\n    }\r\n\r\n    private getPreview = (): string => this.props.preview ? `${process.env.PUBLIC_URL}/Assets/Projects/${this.props.preview}.png` : `${process.env.PUBLIC_URL}/Assets/Projects/Clock.png` \r\n\r\n    private renderLink = (link: ILink): JSX.Element => <li><a href={link.url}>{link.title}</a></li>\r\n\r\n    private renderLinks = (): JSX.Element => (\r\n        <Col lg=\"3\">\r\n            <p>Links:</p>\r\n            <ul>{this.props.links!.map(this.renderLink)}</ul>\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col xs={this.state.size}>\r\n            <Card className={`project-card ${this.state.isOpen && \"project-card-open\"}`} onClick={this.toggleNav}>\r\n                <div>\r\n                    <CardImg top src={this.getPreview()} alt=\"Card image cap\" className=\"project-card-image\" />\r\n                </div>\r\n                <div className=\"project-card-overlay\"></div>\r\n                <Row noGutters className=\"project-card-text\">\r\n                    <Col>\r\n                        {this.props.name}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <Collapse isOpen={this.state.isOpen}>\r\n                <Row className=\"project-card-body\">\r\n                    <Col lg={ this.props.links ? \"9\" : \"12\"}>\r\n                        <DateRange start={this.props.start} end={this.props.end} />\r\n                        <div><strong>My role:</strong> {this.props.role}</div>\r\n                        <div>{this.props.description}</div>\r\n                    </Col>\r\n                    { this.props.links && this.renderLinks() }\r\n                </Row>\r\n            </Collapse>\r\n        </Col>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, } from 'reactstrap';\r\n\r\nimport Avatar from \"./../Assets/avatar.jpg\"\r\n\r\nimport { IBiography } from \"./../Model/IPortfolio\"\r\n\r\nexport default class Biography extends React.Component<IBiography> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"biography\">\r\n                <img src={Avatar} className=\"biography-avatar\" />\r\n                <div className=\"biography-title\">{this.props.name}</div>\r\n                <div className=\"biography-headline\">{this.props.headline}</div>\r\n            </div>\r\n            <div className=\"biography-summary\">{this.props.summary}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport { ICompany } from '../Model/IPortfolio'\r\n\r\ninterface ICompanyItemProps extends ICompany {\r\n    body: JSX.Element;\r\n}\r\n\r\nexport default class CompanyItem extends React.Component<ICompanyItemProps> {\r\n    private getLogo = (): string =>  this.props.logo ? `${process.env.PUBLIC_URL}/Assets/Logos/${this.props.logo}.png` : \"http://via.placeholder.com/60x60\";\r\n\r\n    render = (): JSX.Element => (\r\n        <Media className=\"company\">\r\n            <Media left href={this.props.url}>\r\n                <div className=\"company-logo-wrapper\">\r\n                    <img className=\"company-logo\" src={this.getLogo()} alt=\"Company logo\" />\r\n                </div>\r\n            </Media>\r\n            <Media body>\r\n                <div className=\"company-heading\">{this.props.name}</div>\r\n                {this.props.body}\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IExperience } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<IExperience> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            { this.props.description && <div className=\"description\">{this.props.description}</div> }\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.company } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IEducation } from './../Model/IPortfolio'\r\n\r\nexport default class Education extends React.Component<IEducation> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            <div>\r\n                { this.props.degree && <span className=\"education-degree\">{this.props.degree} </span> }\r\n                { this.props.field }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.school } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport default class SectionTitle extends React.Component<{ title: string, id?: string }> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"section-title\" id={this.props.id}>\r\n                <span>{this.props.title}</span>\r\n                <hr />\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nimport { ISkill } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<ISkill> {\r\n    render = (): JSX.Element => (\r\n        <Col xl md=\"6\">\r\n            <div className=\"skill-description\"><span className=\"skill-title\">{this.props.field}</span>{this.props.description}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAt, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faTwitter, faStackOverflow, faGithub, faPinterest } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { IContacts } from './../Model/IPortfolio'\r\n\r\nexport default class Contact extends React.Component<IContacts> {\r\n    private renderSocial = (text: string, url: string, icon: IconDefinition): JSX.Element => (\r\n        <Col xs=\"4\" className=\"social\">\r\n            <a href={url} className=\"social-link\">\r\n                <FontAwesomeIcon icon={icon} size=\"4x\" />\r\n                <div>{text}</div>\r\n            </a>\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col>\r\n            <Row>\r\n                { this.props.email && this.renderSocial(this.props.email, `email://${this.props.linkedin}/`, faAt)}\r\n                { this.props.linkedin && this.renderSocial(`in\\\\${this.props.linkedin}`, `https://www.linkedin.com/in/${this.props.linkedin}/`, faLinkedin)}\r\n                { this.props.twitter && this.renderSocial(`@${this.props.twitter}`, `https://twitter.com/${this.props.twitter}`, faTwitter)}\r\n                { this.props.stackoverflow && this.renderSocial('StackOverflow', `https://stackoverflow.com/users/${this.props.stackoverflow}`, faStackOverflow)}\r\n                { this.props.github && this.renderSocial('Github', `https://github.com/${this.props.github}`, faGithub)}\r\n                { this.props.pinterest && this.renderSocial('Pinterest', `https://cz.pinterest.com/${this.props.pinterest}/`, faPinterest)}\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Button, } from 'reactstrap';\r\n\r\nimport groupBy from 'lodash.groupby';\r\nimport sortBy from 'lodash.sortby';\r\n\r\nimport Navigation from './Navigation';\r\nimport ProjectCard from './ProjectCard';\r\nimport Biography from './Biography';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport SectionTitle from './SectionTitle';\r\nimport Skill from './Skill';\r\nimport Contact from './Contact';\r\n\r\nimport { IPortfolio, IProject } from \"./../Model/IPortfolio\"\r\nimport PortfolioJSON from \"./../Data/portfolio.json\"\r\n\r\ninterface ISectionGroups {\r\n    [type: string]: IProject[];\r\n}\r\n\r\ninterface IAppState {\r\n    portfolio: IPortfolio;\r\n    filteredProjects: ISectionGroups;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n    public state: IAppState = {\r\n        portfolio: PortfolioJSON,\r\n        filteredProjects: groupBy(sortBy(PortfolioJSON.projects, 'type'), 'type'),\r\n    };\r\n\r\n    private toAnchor = (name: string): string => name.replace(/ /g, '_').toLowerCase();\r\n\r\n    private getSections = () => Object.keys(this.state.filteredProjects).map((type) => ({\r\n        name: type,\r\n        anchor: this.toAnchor(type),\r\n    }));\r\n\r\n    private renderSection = (type: string, projects: IProject[]): JSX.Element => (\r\n        <Row className=\"section justify-content-center\" noGutters>\r\n            <SectionTitle title={type} id={this.toAnchor(type)} />\r\n            { projects.map((project) => <ProjectCard { ...project } />)}\r\n        </Row>\r\n    );\r\n\r\n    render = (): JSX.Element => (\r\n        <Row noGutters>\r\n            <Col md=\"auto\" className=\"sticky-top\">\r\n                <Navigation subtitle={this.state.portfolio.biography.name} sections={this.getSections()} />\r\n            </Col>\r\n            <Col md>\r\n                <main>\r\n                    { Object.entries(this.state.filteredProjects).map((entry) => this.renderSection(entry[0], entry[1])) }\r\n                    <Row className=\"section\">\r\n                        <SectionTitle title=\"Biography\" id=\"biography\" />\r\n                        <Biography {...this.state.portfolio.biography} />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Experience\"/>\r\n                            {this.state.portfolio.experience.map((ex) => <Experience {...ex} />)}\r\n                        </Col>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Education\"/>\r\n                            {this.state.portfolio.education.map((ed) => <Education {...ed} />)}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Skills\"/>\r\n                        {this.state.portfolio.skills.map((skill) => <Skill {...skill} />)}\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Contact\" id=\"contact\" />\r\n                        <Contact { ...this.state.portfolio.contacts } />\r\n                    </Row>\r\n                </main>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.scss';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}