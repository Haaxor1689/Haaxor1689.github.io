{"version":3,"sources":["Assets/avatar.jpg","Components/Navigation.tsx","Components/DateRange.tsx","Components/ProjectCard.tsx","Components/Biography.tsx","Components/CompanyItem.tsx","Components/Experience.tsx","Components/Education.tsx","Components/SectionTitle.tsx","Components/Skill.tsx","Components/Contact.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Navigation","state","isOpen","show","width","_this","toggleNav","setState","prevState","Object","objectSpread","render","react_default","a","createElement","className","href","props","subtitle","Button","color","onClick","esm","handleWidth","resizableElementId","_ref","height","Collapse","Nav","vertical","sections","map","section","NavLink","concat","anchor","name","React","Component","DateRange","getEnd","end","start","ProjectCard","size","onExited","console","log","urlPrefix","process","getPreview","preview","renderLink","link","url","title","renderLinks","Col","lg","links","renderImage","src","alt","renderImages","Row","images","xs","Card","CardImg","top","noGutters","DateRange_DateRange","role","description","Biography","Avatar","headline","summary","CompanyItem","getLogo","logo","Media","left","body","Experience","renderBody","CompanyItem_CompanyItem","assign","company","Education","degree","field","school","SectionTitle","id","Col_default","xl","md","Contact","renderSocial","text","icon","index_es","email","linkedin","faAt","faLinkedin","twitter","faTwitter","stackoverflow","faStackOverflow","github","faGithub","pinterest","faPinterest","App","portfolio","PortfolioJSON","filteredProjects","groupBy","sortBy","projects","toAnchor","replace","toLowerCase","getSections","keys","type","renderSection","SectionTitle_SectionTitle","project","ProjectCard_ProjectCard","Navigation_Navigation","biography","entries","entry","Biography_Biography","experience","ex","Experience_Experience","education","ed","Education_Education","skills","skill","Skill_Experience","Contact_Contact","contacts","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bdb9fd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.fe5d8070.jpg\";","import React from 'react';\r\nimport { Nav, NavLink, Collapse, Button, } from 'reactstrap';\r\nimport ResizeDetector from 'react-resize-detector';\r\n\r\ninterface INavigationProps {\r\n    subtitle: string;\r\n    sections: { name: string, anchor: string }[];\r\n}\r\n\r\nexport default class Navigation extends React.Component<INavigationProps, { isOpen: boolean }> {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    private show = (width: number): boolean => {\r\n        return width > 768 || this.state.isOpen;\r\n    }\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            isOpen: !prevState.isOpen,\r\n        }));\r\n    }\r\n\r\n    render = (): JSX.Element => (\r\n        <header>\r\n            <div className=\"sticky-top\">\r\n                <a href=\"#root\" className=\"nav-brand\">\r\n                    <div className=\"nav-title\">Portfolio</div>\r\n                    <div className=\"nav-subtitle\">{this.props.subtitle}</div>\r\n                </a>\r\n                <Button color=\"primary\" className=\"nav-button\" onClick={this.toggleNav}>Menu</Button>\r\n                <ResizeDetector handleWidth resizableElementId=\"root\" render={({width, height}) => (\r\n                    <Collapse isOpen={this.show(width)} className=\"nav-list\">\r\n                        <Nav vertical>\r\n                            <div className=\"nav-sections\">\r\n                            { this.props.sections.map((section) => <NavLink href={`#${section.anchor}`}>{section.name}</NavLink>)}\r\n                            </div>\r\n                            <NavLink href=\"#biography\">Biography</NavLink>\r\n                            <NavLink href=\"#contact\">Contact</NavLink>\r\n                        </Nav>\r\n                    </Collapse>\r\n                )}>\r\n                </ResizeDetector>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class DateRange extends React.Component<{ start: string, end?: string}> {\r\n    private getEnd = (): string => this.props.end || \"Present\";\r\n    render = (): JSX.Element => (\r\n        <span className=\"date-range\">\r\n            {this.props.start} - {this.getEnd()}\r\n        </span>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, Card, CardImg, Row, Collapse } from 'reactstrap';\r\n\r\nimport { IProject, ILink } from './../Model/IPortfolio'\r\nimport DateRange from './DateRange';\r\n\r\ninterface IProjectCardState {\r\n    isOpen: boolean,\r\n    size: \"auto\" | \"12\",\r\n}\r\n\r\nexport default class ProjectCard extends React.Component<IProject, IProjectCardState> {\r\n    state: IProjectCardState = {\r\n        isOpen: false,\r\n        size: \"auto\",\r\n    }\r\n\r\n    private isOpen = (): boolean => this.state.isOpen || this.state.size === \"12\";\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            isOpen: !prevState.isOpen,\r\n            size: !prevState.isOpen ? \"12\" : prevState.size,\r\n        }));\r\n    }\r\n\r\n    private onExited = () => {\r\n        console.log('closed');\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            size: \"auto\",\r\n        }));\r\n    }\r\n\r\n    private urlPrefix = `${process.env.PUBLIC_URL}/Assets/Projects/`;\r\n\r\n    private getPreview = (): string => this.props.preview ? this.urlPrefix + this.props.preview : `${this.urlPrefix}Clock.png` \r\n\r\n    private renderLink = (link: ILink): JSX.Element => <li><a href={link.url}>{link.title}</a></li>\r\n\r\n    private renderLinks = (): JSX.Element => (\r\n        <Col lg=\"3\">\r\n            <strong>Links:</strong>\r\n            <ul>{this.props.links!.map(this.renderLink)}</ul>\r\n        </Col>\r\n    )\r\n\r\n    private renderImage = (link: ILink): JSX.Element => <Col><img src={this.urlPrefix + link.url} alt={link.title} title={link.title} className=\"project-card-image\" /></Col>\r\n\r\n    private renderImages = (): JSX.Element => (\r\n        <Col className=\"w-100\">\r\n            <Row className=\"justify-content-around\">\r\n                {this.props.images!.map(this.renderImage)}\r\n            </Row>\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col xs={this.state.size}>\r\n            <Card className={`project-card ${this.isOpen() && \"project-card-open\"}`} onClick={this.toggleNav}>\r\n                <div className=\"project-card-preview-container\">\r\n                    <CardImg top src={this.getPreview()} alt=\"Card image cap\" className=\"project-card-preview\" />\r\n                </div>\r\n                <div className=\"project-card-overlay\"></div>\r\n                <Row noGutters className=\"project-card-text\">\r\n                    <Col>\r\n                        {this.props.name}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <Collapse isOpen={this.state.isOpen} onExited={this.onExited}>\r\n                <Row className=\"project-card-body\">\r\n                    <Col lg={ this.props.links ? \"9\" : \"12\"}>\r\n                        <DateRange start={this.props.start} end={this.props.end} />\r\n                        <div><strong>My role:</strong> {this.props.role}</div>\r\n                        <div className=\"project-card-description\">{this.props.description}</div>\r\n                    </Col>\r\n                    { this.props.links && this.renderLinks() }\r\n                    { this.props.images && this.renderImages() }\r\n                </Row>\r\n            </Collapse>\r\n        </Col>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, } from 'reactstrap';\r\n\r\nimport Avatar from \"./../Assets/avatar.jpg\"\r\n\r\nimport { IBiography } from \"./../Model/IPortfolio\"\r\n\r\nexport default class Biography extends React.Component<IBiography> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"biography\">\r\n                <img src={Avatar} className=\"biography-avatar\" />\r\n                <div className=\"biography-title\">{this.props.name}</div>\r\n                <div className=\"biography-headline\">{this.props.headline}</div>\r\n            </div>\r\n            <div className=\"biography-summary\">{this.props.summary}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport { ICompany } from '../Model/IPortfolio'\r\n\r\ninterface ICompanyItemProps extends ICompany {\r\n    body: JSX.Element;\r\n}\r\n\r\nexport default class CompanyItem extends React.Component<ICompanyItemProps> {\r\n    private getLogo = (): string =>  this.props.logo ? `${process.env.PUBLIC_URL}/Assets/Logos/${this.props.logo}` : \"http://via.placeholder.com/60x60\";\r\n\r\n    render = (): JSX.Element => (\r\n        <Media className=\"company\">\r\n            <Media left href={this.props.url}>\r\n                <div className=\"company-logo-wrapper\">\r\n                    <img className=\"company-logo\" src={this.getLogo()} alt=\"Company logo\" />\r\n                </div>\r\n            </Media>\r\n            <Media body>\r\n                <div className=\"company-heading\">{this.props.name}</div>\r\n                {this.props.body}\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IExperience } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<IExperience> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            { this.props.description && <div className=\"description\">{this.props.description}</div> }\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.company } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IEducation } from './../Model/IPortfolio'\r\n\r\nexport default class Education extends React.Component<IEducation> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            <div>\r\n                { this.props.degree && <span className=\"education-degree\">{this.props.degree} </span> }\r\n                { this.props.field }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.school } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport default class SectionTitle extends React.Component<{ title: string, id?: string }> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"section-title\" id={this.props.id}>\r\n                <span>{this.props.title}</span>\r\n                <hr />\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nimport { ISkill } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<ISkill> {\r\n    render = (): JSX.Element => (\r\n        <Col xl md=\"6\">\r\n            <div className=\"skill-description\"><span className=\"skill-title\">{this.props.field}</span>{this.props.description}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAt, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faTwitter, faStackOverflow, faGithub, faPinterest } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { IContacts } from './../Model/IPortfolio'\r\n\r\nexport default class Contact extends React.Component<IContacts> {\r\n    private renderSocial = (text: string, url: string, icon: IconDefinition): JSX.Element => (\r\n        <Col xs=\"4\" className=\"social\">\r\n            <a href={url} className=\"social-link\">\r\n                <FontAwesomeIcon icon={icon} size=\"4x\" />\r\n                <div>{text}</div>\r\n            </a>\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col>\r\n            <Row>\r\n                { this.props.email && this.renderSocial(this.props.email, `email://${this.props.linkedin}/`, faAt)}\r\n                { this.props.linkedin && this.renderSocial(`in\\\\${this.props.linkedin}`, `https://www.linkedin.com/in/${this.props.linkedin}/`, faLinkedin)}\r\n                { this.props.twitter && this.renderSocial(`@${this.props.twitter}`, `https://twitter.com/${this.props.twitter}`, faTwitter)}\r\n                { this.props.stackoverflow && this.renderSocial('StackOverflow', `https://stackoverflow.com/users/${this.props.stackoverflow}`, faStackOverflow)}\r\n                { this.props.github && this.renderSocial('Github', `https://github.com/${this.props.github}`, faGithub)}\r\n                { this.props.pinterest && this.renderSocial('Pinterest', `https://cz.pinterest.com/${this.props.pinterest}/`, faPinterest)}\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Button, } from 'reactstrap';\r\n\r\nimport groupBy from 'lodash.groupby';\r\nimport sortBy from 'lodash.sortby';\r\n\r\nimport Navigation from './Navigation';\r\nimport ProjectCard from './ProjectCard';\r\nimport Biography from './Biography';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport SectionTitle from './SectionTitle';\r\nimport Skill from './Skill';\r\nimport Contact from './Contact';\r\n\r\nimport { IPortfolio, IProject } from \"./../Model/IPortfolio\"\r\nimport PortfolioJSON from \"./../Data/portfolio.json\"\r\n\r\ninterface ISectionGroups {\r\n    [type: string]: IProject[];\r\n}\r\n\r\ninterface IAppState {\r\n    portfolio: IPortfolio;\r\n    filteredProjects: ISectionGroups;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n    public state: IAppState = {\r\n        portfolio: PortfolioJSON,\r\n        filteredProjects: groupBy(sortBy(PortfolioJSON.projects, 'type'), 'type'),\r\n    };\r\n\r\n    private toAnchor = (name: string): string => name.replace(/ /g, '_').toLowerCase();\r\n\r\n    private getSections = () => Object.keys(this.state.filteredProjects).map((type) => ({\r\n        name: type,\r\n        anchor: this.toAnchor(type),\r\n    }));\r\n\r\n    private renderSection = (type: string, projects: IProject[]): JSX.Element => (\r\n        <Row className=\"section justify-content-center\" noGutters>\r\n            <SectionTitle title={type} id={this.toAnchor(type)} />\r\n            { projects.map((project) => <ProjectCard { ...project } />)}\r\n        </Row>\r\n    );\r\n\r\n    render = (): JSX.Element => (\r\n        <Row noGutters>\r\n            <Col md=\"auto\" className=\"sticky-top\">\r\n                <Navigation subtitle={this.state.portfolio.biography.name} sections={this.getSections()} />\r\n            </Col>\r\n            <Col md>\r\n                <main>\r\n                    { Object.entries(this.state.filteredProjects).map((entry) => this.renderSection(entry[0], entry[1])) }\r\n                    <Row className=\"section\">\r\n                        <SectionTitle title=\"Biography\" id=\"biography\" />\r\n                        <Biography {...this.state.portfolio.biography} />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Experience\"/>\r\n                            {this.state.portfolio.experience.map((ex) => <Experience {...ex} />)}\r\n                        </Col>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Education\"/>\r\n                            {this.state.portfolio.education.map((ed) => <Education {...ed} />)}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Skills\"/>\r\n                        {this.state.portfolio.skills.map((skill) => <Skill {...skill} />)}\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Contact\" id=\"contact\" />\r\n                        <Contact { ...this.state.portfolio.contacts } />\r\n                    </Row>\r\n                </main>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.scss';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}