{"version":3,"sources":["Assets/avatar.jpg","Components/Navigation.tsx","Components/DateRange.tsx","Components/ProjectCard.tsx","Components/Biography.tsx","Components/CompanyItem.tsx","Components/Experience.tsx","Components/Education.tsx","Components/SectionTitle.tsx","Components/Skill.tsx","Components/Contact.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Navigation","state","isOpen","show","width","_this","toggleNav","setState","prevState","Object","objectSpread","render","react_default","a","createElement","className","href","props","subtitle","Button","color","onClick","lib_esm","handleWidth","resizableElementId","_ref","height","Collapse","Nav","vertical","sections","map","section","idx","NavLink","key","concat","anchor","name","React","Component","DateRange","getEnd","end","start","ProjectCard","size","registerClick","link","ReactGA","event","category","action","label","title","toggleCard","onCardToggle","setSize","collapseEvents","onEntering","onExiting","onExited","urlPrefix","process","getPreview","preview","renderLinks","Col","lg","links","url","renderImages","UncontrolledCarousel","items","images","image","src","altText","caption","header","xs","Card","CardImg","top","alt","Row","noGutters","assign","DateRange_DateRange","role","dangerouslySetInnerHTML","__html","description","Biography","Avatar","headline","summary","CompanyItem","getLogo","logo","Media","left","body","Experience","renderBody","CompanyItem_CompanyItem","company","Education","degree","field","school","SectionTitle","id","Col_default","xl","md","Contact","renderSocial","text","icon","renderBase","renderEmail","parts","split","sm","index_es","email","linkedin","faAt","faLinkedin","twitter","faTwitter","stackoverflow","faStackOverflow","github","faGithub","pinterest","faPinterest","App","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","portfolio","PortfolioJSON","filteredProjects","groupBy","sortBy","projects","openedCard","onCardOpen","toAnchor","replace","toLowerCase","getSections","keys","type","renderSection","SectionTitle_SectionTitle","project","ProjectCard_ProjectCard","Navigation_Navigation","biography","entries","entry","Biography_Biography","experience","ex","Experience_Experience","education","ed","Education_Education","skills","skill","Skill_Experience","Contact_Contact","contacts","initialize","pageview","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ed78920.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.fe5d8070.jpg\";","import React from 'react';\r\nimport { Nav, NavLink, Collapse, Button, } from 'reactstrap';\r\nimport ResizeDetector from 'react-resize-detector';\r\n\r\ninterface INavigationProps {\r\n    subtitle: string;\r\n    sections: { name: string, anchor: string }[];\r\n}\r\n\r\nexport default class Navigation extends React.Component<INavigationProps, { isOpen: boolean }> {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    private show = (width: number): boolean => {\r\n        return width > 768 || this.state.isOpen;\r\n    }\r\n\r\n    private toggleNav = () => {\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            isOpen: !prevState.isOpen,\r\n        }));\r\n    }\r\n\r\n    render = (): JSX.Element => (\r\n        <header>\r\n            <div className=\"sticky-top\">\r\n                <a href=\"#root\" className=\"nav-brand\">\r\n                    <div className=\"nav-title\">Portfolio</div>\r\n                    <div className=\"nav-subtitle\">{this.props.subtitle}</div>\r\n                </a>\r\n                <Button color=\"primary\" className=\"nav-button\" onClick={this.toggleNav}>Menu</Button>\r\n                <ResizeDetector handleWidth resizableElementId=\"root\" render={({width, height}) => (\r\n                    <Collapse isOpen={this.show(width)} className=\"nav-list\">\r\n                        <Nav vertical>\r\n                            <div className=\"nav-sections\">\r\n                            { this.props.sections.map((section, idx) => <NavLink key={idx} href={`#${section.anchor}`}>{section.name}</NavLink>)}\r\n                            </div>\r\n                            <NavLink href=\"#biography\">Biography</NavLink>\r\n                            <NavLink href=\"#contact\">Contact</NavLink>\r\n                        </Nav>\r\n                    </Collapse>\r\n                )}>\r\n                </ResizeDetector>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class DateRange extends React.Component<{ start: string, end?: string}> {\r\n    private getEnd = (): string => this.props.end || \"Present\";\r\n    render = (): JSX.Element => (\r\n        <span className=\"date-range\">\r\n            {this.props.start} { this.props.start !== this.getEnd() && `- ${this.getEnd()}` }\r\n        </span>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, Card, CardImg, Row, Collapse, UncontrolledCarousel } from 'reactstrap';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { IProject, ILink } from './../Model/IPortfolio'\r\nimport DateRange from './DateRange';\r\n\r\ninterface IProjectCardProps extends IProject {\r\n    isOpen: boolean,\r\n    onCardToggle: (key: string | null) => void,\r\n}\r\n\r\ninterface IProjectCardState {\r\n    size: \"auto\" | \"12\",\r\n}\r\n\r\nexport default class ProjectCard extends React.Component<IProjectCardProps, IProjectCardState> {\r\n    state: IProjectCardState = {\r\n        size: this.props.isOpen ? \"12\" : \"auto\",\r\n    }\r\n\r\n    private isOpen = (): boolean => this.props.isOpen || this.state.size === \"12\";\r\n\r\n    private registerClick = (link: ILink) => {\r\n        ReactGA.event({\r\n            category: \"Projects\",\r\n            action: \"Clicked card link\",\r\n            label: `${this.props.name} - ${link.title}`,\r\n        })\r\n    }\r\n\r\n    private toggleCard = () => {\r\n        if (!this.props.isOpen) {\r\n            ReactGA.event({\r\n                category: \"Projects\",\r\n                action: \"Opened card\",\r\n                label: this.props.name,\r\n            })\r\n        }\r\n        this.props.onCardToggle(this.props.isOpen ? null : this.props.name);\r\n    }\r\n\r\n    private setSize = (size: \"12\" | \"auto\") => this.setState((prevState) => ({ ...prevState, size, }));\r\n\r\n    private collapseEvents = {\r\n        onEntering: () => this.setSize(\"12\"),\r\n        onExiting: () => this.setSize(\"12\"),\r\n        onExited: () => this.setSize(\"auto\"),\r\n    }\r\n\r\n    private urlPrefix = `${process.env.PUBLIC_URL}/Assets/Projects/`;\r\n\r\n    private getPreview = (): string => this.props.preview ? this.urlPrefix + this.props.preview : `https://via.placeholder.com/100`\r\n\r\n    private renderLinks = (): JSX.Element => (\r\n        <Col lg=\"3\">\r\n            <strong>Links:</strong>\r\n            <ul>{this.props.links!.map((link, idx) => <li key={idx}><a href={link.url} onClick={() => this.registerClick(link)}>{link.title}</a></li>)}</ul>\r\n        </Col>\r\n    )\r\n\r\n    private renderImages = (): JSX.Element => (\r\n        <Col className=\"w-100\">\r\n            <UncontrolledCarousel items={this.props.images!.map(image => ({\r\n                src: this.urlPrefix + image.url,\r\n                altText: image.title,\r\n                caption: \"\",\r\n                header: image.title,\r\n            }))} />\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col xs={this.state.size}>\r\n            <Card className={`project-card ${this.isOpen() && \"project-card-open\"}`} onClick={this.toggleCard}>\r\n                <div className=\"project-card-preview-container\">\r\n                    <CardImg top src={this.getPreview()} alt=\"Card image cap\" className=\"project-card-preview\" />\r\n                </div>\r\n                <div className=\"project-card-overlay\"></div>\r\n                <Row noGutters className=\"project-card-text\">\r\n                    <Col>\r\n                        {this.props.name}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <Collapse isOpen={this.props.isOpen} {...this.collapseEvents}>\r\n                <Row className=\"project-card-body\">\r\n                    <Col lg={ this.props.links ? \"9\" : \"12\"}>\r\n                        <DateRange start={this.props.start} end={this.props.end} />\r\n                        <div><strong>My role:</strong> {this.props.role}</div>\r\n                        <div className=\"project-card-description\" dangerouslySetInnerHTML={{ __html: this.props.description! }} />\r\n                    </Col>\r\n                    { this.props.links && this.renderLinks() }\r\n                    { this.props.images && this.renderImages() }\r\n                </Row>\r\n            </Collapse>\r\n        </Col>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Col, } from 'reactstrap';\r\n\r\nimport Avatar from \"./../Assets/avatar.jpg\"\r\n\r\nimport { IBiography } from \"./../Model/IPortfolio\"\r\n\r\nexport default class Biography extends React.Component<IBiography> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"biography\">\r\n                <img src={Avatar} className=\"biography-avatar\" />\r\n                <div className=\"biography-title\">{this.props.name}</div>\r\n                <div className=\"biography-headline\">{this.props.headline}</div>\r\n            </div>\r\n            <div className=\"biography-summary\">{this.props.summary}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport { ICompany } from '../Model/IPortfolio'\r\n\r\ninterface ICompanyItemProps extends ICompany {\r\n    body: JSX.Element;\r\n}\r\n\r\nexport default class CompanyItem extends React.Component<ICompanyItemProps> {\r\n    private getLogo = (): string =>  this.props.logo ? `${process.env.PUBLIC_URL}/Assets/Logos/${this.props.logo}` : \"http://via.placeholder.com/60x60\";\r\n\r\n    render = (): JSX.Element => (\r\n        <Media className=\"company\">\r\n            <Media left href={this.props.url}>\r\n                <div className=\"company-logo-wrapper\">\r\n                    <img className=\"company-logo\" src={this.getLogo()} alt=\"Company logo\" />\r\n                </div>\r\n            </Media>\r\n            <Media body>\r\n                <div className=\"company-heading\">{this.props.name}</div>\r\n                {this.props.body}\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IExperience } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<IExperience> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            { this.props.description && <div className=\"description\">{this.props.description}</div> }\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.company } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\n\r\nimport CompanyItem from './CompanyItem';\r\nimport DateRange from './DateRange';\r\n\r\nimport { IEducation } from './../Model/IPortfolio'\r\n\r\nexport default class Education extends React.Component<IEducation> {\r\n    renderBody = (): JSX.Element => (\r\n        <div>\r\n            <DateRange start={this.props.start} end={this.props.end} />\r\n            <div>\r\n                { this.props.degree && <span className=\"education-degree\">{this.props.degree} </span> }\r\n                { this.props.field }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    render = (): JSX.Element => <CompanyItem { ...this.props.school } body={this.renderBody()} />\r\n}\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport default class SectionTitle extends React.Component<{ title: string, id?: string }> {\r\n    render = (): JSX.Element => (\r\n        <Col xs=\"12\">\r\n            <div className=\"section-title\" id={this.props.id}>\r\n                <span>{this.props.title}</span>\r\n                <hr />\r\n            </div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Col from 'reactstrap/lib/Col';\r\n\r\nimport { ISkill } from './../Model/IPortfolio'\r\n\r\nexport default class Experience extends React.Component<ISkill> {\r\n    render = (): JSX.Element => (\r\n        <Col xl md=\"6\">\r\n            <div className=\"skill-description\"><span className=\"skill-title\">{this.props.field}</span>{this.props.description}</div>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAt, IconDefinition } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faTwitter, faStackOverflow, faGithub, faPinterest } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { IContacts } from './../Model/IPortfolio'\r\n\r\nexport default class Contact extends React.Component<IContacts> {\r\n    private registerClick = (url: string) => {\r\n        ReactGA.event({\r\n            category: \"Social\",\r\n            action: \"Clicked social link\",\r\n            label: url,\r\n        });\r\n    }\r\n\r\n    private renderSocial = (text: string, url: string, icon: IconDefinition): JSX.Element => this.renderBase(<div>{text}</div>, url, icon);\r\n\r\n    private renderEmail = (text: string, url: string, icon: IconDefinition): JSX.Element => {\r\n        const parts = text.split('@');\r\n        return this.renderBase(<div>{parts[0]}<wbr />@{parts[1]}</div>, url, icon);\r\n    }\r\n\r\n    private renderBase = (text: JSX.Element, url: string, icon: IconDefinition): JSX.Element => (\r\n        <Col sm=\"4\" xs=\"6\" className=\"social\">\r\n            <a href={url} onClick={() => this.registerClick(url)} className=\"social-link\">\r\n                <FontAwesomeIcon icon={icon} size=\"4x\" />\r\n                {text}\r\n            </a>\r\n        </Col>\r\n    )\r\n\r\n    render = (): JSX.Element => (\r\n        <Col>\r\n            <Row>\r\n                { this.props.email && this.renderEmail(this.props.email, `mailto:${this.props.linkedin}`, faAt)}\r\n                { this.props.linkedin && this.renderSocial(`in\\\\${this.props.linkedin}`, `https://www.linkedin.com/in/${this.props.linkedin}/`, faLinkedin)}\r\n                { this.props.twitter && this.renderSocial(`@${this.props.twitter}`, `https://twitter.com/${this.props.twitter}`, faTwitter)}\r\n                { this.props.stackoverflow && this.renderSocial('StackOverflow', `https://stackoverflow.com/users/${this.props.stackoverflow}`, faStackOverflow)}\r\n                { this.props.github && this.renderSocial('Github', `https://github.com/${this.props.github}`, faGithub)}\r\n                { this.props.pinterest && this.renderSocial('Pinterest', `https://cz.pinterest.com/${this.props.pinterest}/`, faPinterest)}\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, } from 'reactstrap';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport groupBy from 'lodash.groupby';\r\nimport sortBy from 'lodash.sortby';\r\n\r\nimport Navigation from './Navigation';\r\nimport ProjectCard from './ProjectCard';\r\nimport Biography from './Biography';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport SectionTitle from './SectionTitle';\r\nimport Skill from './Skill';\r\nimport Contact from './Contact';\r\n\r\nimport { IPortfolio, IProject } from \"./../Model/IPortfolio\"\r\nimport PortfolioJSON from \"./../Data/portfolio.json\"\r\n\r\ninterface ISectionGroups {\r\n    [type: string]: IProject[];\r\n}\r\n\r\ninterface IAppState {\r\n    portfolio: IPortfolio;\r\n    filteredProjects: ISectionGroups;\r\n    openedCard: string | null;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n    public state: IAppState = {\r\n        portfolio: PortfolioJSON,\r\n        filteredProjects: groupBy(sortBy(PortfolioJSON.projects, 'type'), 'type'),\r\n        openedCard: null,\r\n    };\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        ReactGA.initialize(\"UA-136681354-1\");\r\n        ReactGA.pageview(\"/\");\r\n    }\r\n\r\n    private onCardOpen = (key: string | null) => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            openedCard: key,\r\n        }));\r\n    }\r\n\r\n    private toAnchor = (name: string): string => name.replace(/ /g, '_').toLowerCase();\r\n\r\n    private getSections = () => Object.keys(this.state.filteredProjects).map((type) => ({\r\n        name: type,\r\n        anchor: this.toAnchor(type),\r\n    }));\r\n\r\n    private renderSection = (type: string, projects: IProject[], idx: number): JSX.Element => (\r\n        <Row key={idx} className=\"section justify-content-center\" noGutters>\r\n            <SectionTitle title={type} id={this.toAnchor(type)} />\r\n            { projects.map((project, idx) => <ProjectCard key={idx} { ...project } isOpen={project.name == this.state.openedCard} onCardToggle={this.onCardOpen} />)}\r\n        </Row>\r\n    );\r\n\r\n    render = (): JSX.Element => (\r\n        <Row noGutters>\r\n            <Col md=\"auto\" className=\"sticky-top\">\r\n                <Navigation subtitle={this.state.portfolio.biography.name} sections={this.getSections()} />\r\n            </Col>\r\n            <Col md>\r\n                <main>\r\n                    { Object.entries(this.state.filteredProjects).map((entry, idx) => this.renderSection(entry[0], entry[1], idx)) }\r\n                    <Row className=\"section\">\r\n                        <SectionTitle title=\"Biography\" id=\"biography\" />\r\n                        <Biography {...this.state.portfolio.biography} />\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Experience\"/>\r\n                            {this.state.portfolio.experience.map((ex, idx) => <Experience key={idx} {...ex} />)}\r\n                        </Col>\r\n                        <Col lg=\"6\" className=\"section\">\r\n                            <SectionTitle title=\"Education\"/>\r\n                            {this.state.portfolio.education.map((ed, idx) => <Education key={idx} {...ed} />)}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Skills\"/>\r\n                        {this.state.portfolio.skills.map((skill, idx) => <Skill key={idx} {...skill} />)}\r\n                    </Row>\r\n                    <Row>\r\n                        <SectionTitle title=\"Contact\" id=\"contact\" />\r\n                        <Contact { ...this.state.portfolio.contacts } />\r\n                    </Row>\r\n                </main>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.scss';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}